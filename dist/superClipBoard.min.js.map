{"version":3,"sources":["webpack:///superClipBoard.min.js","webpack:///webpack/bootstrap bd1b83891cba6ba6ad19","webpack:///./src/main.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","ClipBoard","this","copyDom","document","createElement","style","position","left","top","width","height","body","appendChild","content","option","opt","createContentNode","innerHTML","selection","window","getSelection","range","createRange","selectNodeContents","removeAllRanges","addRange","isSuccess","execCommand","destroy","copyHandle","success","error","err","callback","dom","removeChild","actionDoms","_this","bindHandle","e","attr","attributes","copy","addEventListener","attachEvent","doms","querySelectorAll","HTMLElement","superClipBoard"],"mappings":"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","file":"superClipBoard.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t  * @author   milan(white gourd angel)\n\t  * @describe A fast way to copy text to clipboard with javascript\n\t\t* no flash, no dependencies, high performance\n\t  */\n\t\n\tvar ClipBoard = function () {\n\t  function ClipBoard() {\n\t    _classCallCheck(this, ClipBoard);\n\t  }\n\t\n\t  _createClass(ClipBoard, [{\n\t    key: 'createContentNode',\n\t    value: function createContentNode() {\n\t      /**\n\t       * @describe Create dom, For storing data to be copied\n\t       * @param\n\t       * @return   dom\n\t       */\n\t      var copyDom = document.createElement('pre');\n\t      copyDom.style.position = 'absolute';\n\t      copyDom.style.left = '-9999px';\n\t      copyDom.style.top = '-9999px';\n\t      copyDom.style.width = '5px';\n\t      copyDom.style.height = '5px';\n\t      document.body.appendChild(copyDom);\n\t      return copyDom;\n\t    }\n\t  }, {\n\t    key: 'copy',\n\t    value: function copy(content, option) {\n\t      /**\n\t       * @describe copy\n\t       * @param    content: Data for replication\n\t       *           option: {\n\t       *              success: success callback\n\t       *              error: error callback\n\t       *           }\n\t       * @return\n\t       */\n\t      var opt = option || {};\n\t      try {\n\t        // create\n\t        var copyDom = this.createContentNode();\n\t        copyDom.innerHTML = content;\n\t        var selection = window.getSelection();\n\t        var range = document.createRange();\n\t\n\t        // select\n\t        range.selectNodeContents(copyDom);\n\t        selection.removeAllRanges();\n\t        selection.addRange(range);\n\t        var isSuccess = document.execCommand('copy');\n\t\n\t        // destroy\n\t        this.destroy(copyDom);\n\t        // callback\n\t        this.copyHandle(isSuccess ? opt.success : opt.error);\n\t        return isSuccess;\n\t      } catch (err) {\n\t        this.copyHandle(opt.error);\n\t        return false;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'copyHandle',\n\t    value: function copyHandle(callback) {\n\t      if (!callback) {\n\t        return;\n\t      }\n\t      callback.call();\n\t    }\n\t  }, {\n\t    key: 'destroy',\n\t    value: function destroy(dom) {\n\t      /**\n\t       * @describe The node is removed when copy complete\n\t       * @param    dom\n\t       */\n\t      document.body.removeChild(dom);\n\t    }\n\t  }, {\n\t    key: 'bind',\n\t    value: function bind(actionDoms, opt) {\n\t      var _this = this;\n\t\n\t      /**\n\t        * @describe Bind copy event, bind\n\t        * @param    actionDoms: dom or [dom1, dom2, ...] or selector(str) or jqueryDom\n\t        * @return\n\t        */\n\t      var bindHandle = function bindHandle(dom) {\n\t        var copyHandle = function copyHandle(e) {\n\t          var attr = e.target.attributes['data-copy-content'] || {};\n\t          _this.copy(attr.value, opt);\n\t        };\n\t        if (dom.addEventListener) {\n\t          dom.addEventListener('click', function (e) {\n\t            copyHandle.call(_this, e);\n\t          });\n\t        } else if (dom.attachEvent) {\n\t          dom.attachEvent('onClick', function (e) {\n\t            copyHandle.call(_this, e);\n\t          });\n\t        }\n\t      };\n\t      if (!actionDoms) {\n\t        return;\n\t      }\n\t      // selector\n\t      var doms = actionDoms;\n\t      if (typeof doms === 'string') {\n\t        doms = document.querySelectorAll(doms);\n\t      }\n\t      // doms\n\t      if (doms.length > 0) {\n\t        for (var i = 0; i < doms.length; i++) {\n\t          if (doms[i] instanceof HTMLElement) {\n\t            bindHandle(doms[i]);\n\t          }\n\t        }\n\t      } else {\n\t        // dom\n\t        bindHandle(doms);\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return ClipBoard;\n\t}();\n\t\n\tvar superClipBoard = new ClipBoard();\n\twindow.superClipBoard = superClipBoard;\n\t\n\texports.default = superClipBoard;\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** superClipBoard.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap bd1b83891cba6ba6ad19\n **/","/**\n  * @author   milan(white gourd angel)\n  * @describe A fast way to copy text to clipboard with javascript\n\t* no flash, no dependencies, high performance\n  */\nclass ClipBoard {\n  createContentNode() {\n    /**\n     * @describe Create dom, For storing data to be copied\n     * @param\n     * @return   dom\n     */\n    const copyDom = document.createElement('pre');\n    copyDom.style.position = 'absolute';\n    copyDom.style.left = '-9999px';\n    copyDom.style.top = '-9999px';\n    copyDom.style.width = '5px';\n    copyDom.style.height = '5px';\n    document.body.appendChild(copyDom);\n    return copyDom;\n  }\n  copy(content, option) {\n    /**\n     * @describe copy\n     * @param    content: Data for replication\n     *           option: {\n     *              success: success callback\n     *              error: error callback\n     *           }\n     * @return\n     */\n    const opt = option || {};\n    try {\n      // create\n      const copyDom = this.createContentNode();\n      copyDom.innerHTML = content;\n      const selection = window.getSelection();\n      const range = document.createRange();\n\n      // select\n      range.selectNodeContents(copyDom);\n      selection.removeAllRanges();\n      selection.addRange(range);\n      const isSuccess = document.execCommand('copy');\n\n      // destroy\n      this.destroy(copyDom);\n      // callback\n      this.copyHandle(isSuccess ? opt.success : opt.error);\n      return isSuccess;\n    } catch (err) {\n      this.copyHandle(opt.error);\n      return false;\n    }\n  }\n  copyHandle(callback) {\n    if (!callback) {\n      return;\n    }\n    callback.call();\n  }\n  destroy(dom) {\n    /**\n     * @describe The node is removed when copy complete\n     * @param    dom\n     */\n    document.body.removeChild(dom);\n  }\n  bind(actionDoms, opt) {\n   /**\n     * @describe Bind copy event, bind\n     * @param    actionDoms: dom or [dom1, dom2, ...] or selector(str) or jqueryDom\n     * @return\n     */\n    const bindHandle = (dom) => {\n      const copyHandle = (e) => {\n        const attr = e.target.attributes['data-copy-content'] || {};\n        this.copy(attr.value, opt);\n      };\n      if (dom.addEventListener) {\n        dom.addEventListener('click', (e) => {\n          copyHandle.call(this, e);\n        });\n      } else if (dom.attachEvent) {\n        dom.attachEvent('onClick', (e) => {\n          copyHandle.call(this, e);\n        });\n      }\n    };\n    if (!actionDoms) {\n      return;\n    }\n    // selector\n    let doms = actionDoms;\n    if (typeof doms === 'string') {\n      doms = document.querySelectorAll(doms);\n    }\n    // doms\n    if (doms.length > 0) {\n      for (let i = 0; i < doms.length; i++) {\n        if (doms[i] instanceof HTMLElement) {\n          bindHandle(doms[i]);\n        }\n      }\n    } else {\n\t\t\t// dom\n      bindHandle(doms);\n    }\n  }\n}\nconst superClipBoard = new ClipBoard();\nwindow.superClipBoard = superClipBoard;\n\nexport default superClipBoard;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.js\n **/"],"sourceRoot":""}